---
import { getCollection } from "astro:content";
import type { ImageTimelineItem, TimelineItem, Skill, AboutData } from "../types";

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import BackgroundCanvas from "../components/common/BackgroundCanvas.astro";
import Grid from "../components/common/Grid.astro";
import PortfolioPreview from "../components/widgets/PortfolioPreview.astro";

// Portfolio Components
import Hero from "../components/portfolio/Hero.astro";
import Nav from "../components/portfolio/Nav.astro";
import About from "../components/portfolio/About.astro";
import Education from "../components/portfolio/Education.astro";
import Experience from "../components/portfolio/Experience.astro";

// Content Fetching
const projects = (await getCollection("work"))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

const educationEntries = await getCollection("education");
const education: ImageTimelineItem[] = educationEntries
	.sort(
		(a, b) =>
			(a.data.order ?? Number.POSITIVE_INFINITY) -
			(b.data.order ?? Number.POSITIVE_INFINITY),
	)
	.map(({ data }) => ({
		title: data.title,
		subtitle: data.subtitle,
		period: data.period,
		description: data.description,
		image: data.image,
	}));

const experienceEntries = await getCollection("experience");
const work: TimelineItem[] = experienceEntries
	.sort(
		(a, b) =>
			(a.data.order ?? Number.POSITIVE_INFINITY) -
			(b.data.order ?? Number.POSITIVE_INFINITY),
	)
	.map(({ data }) => ({
		title: data.title,
		subtitle: data.subtitle,
		period: data.period,
		stack: data.stack || [],
		description: data.description,
		icon: data.icon,
	}));

const aboutDescription = (await getCollection("about"))
	.map(({ data }) => data.description)
	.join("\n\n");

const skills: Skill[] = (await getCollection("skills"))
	.map(({ data }) => data)
	.sort((a, b) => a.order - b.order);
---

<BaseLayout showTopButton={true}>
	<div class="stack gap-8 lg:gap-20">
		<header id="hero" class="hero">
			<BackgroundCanvas variant="hero" />
			<Hero name="Nathan" role="I'm a Software Developer" ctaHref="#projects" />
		</header>

		<Nav />

		<main class="wrapper stack gap-20 lg:gap-38">
			<About id="about" description={aboutDescription} skills={skills} />
			<Education id="education" title="Education" items={education} />
			<Experience id="experience" title="Work Experience" items={work} />
		</main>
	</div>
</BaseLayout>

<style>
	.section {
		display: grid;
		gap: 2rem;
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: "header header header header" "gallery gallery gallery gallery";
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>
