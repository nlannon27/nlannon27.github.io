---
const skills = [
    { name: "Python", key: "python", img: "/assets/tech/python.svg" },
    {
        name: "Javascript",
        key: "javascript",
        img: "/assets/tech/javascript.svg",
    },
    { name: "PHP", key: "php", img: "/assets/tech/php.svg" },
    { name: "NoSQL", key: "nosql", img: "/assets/tech/json.svg" },
    { name: "C++", key: "cpp", img: "/assets/tech/cpp.svg" },
    { name: "Java", key: "java", img: "/assets/tech/java.svg" },
    { name: "C#", key: "csharp", img: "/assets/tech/csharp.svg" },
    { name: "Embedded C", key: "c", img: "/assets/tech/c.svg" },
    { name: "Unreal Engine", key: "unreal", img: "/assets/tech/unreal.svg" },
    { name: "SQL", key: "sql", img: "/assets/tech/mysql.svg" },
    { name: "Linux", key: "linux", img: "/assets/tech/ubuntu.svg" },
    { name: "Git", key: "git", img: "/assets/tech/git.svg" },
    { name: "Frontend", key: "frontend", img: "/assets/tech/astro.svg" },
];

const rows = [
    ["python", "javascript", "php", "nosql"],
    ["cpp", "java", "csharp", "c", "unreal"],
    ["sql", "linux", "git", "frontend"],
];

const ICON_H = "2.75rem";
---

<section id="about" class="about">
    <h2 class="title fade-up" data-delay="0">
        About <span class="underline"></span>
    </h2>

    <div class="wrapper">
        <div class="intro fade-up" data-delay="100">
            <div class="avatar-mask"></div>

            <p>
                I'm a software developer focused on C++, Python, JavaScript, and
                Unreal Engine. I've worked on projects like underwater VR
                simulations, real-time gaze-tracking systems, and optimized
                game-streaming technology. I'm always looking for challenging
                problems to solve and new things to learn.
            </p>
        </div>

        <div class="skills" style={`--icon-h:${ICON_H}`}>
            {
                rows.map((row) => (
                    <div class="skills__row">
                        {row.map((key) => {
                            const s = skills.find((x) => x.key === key);
                            if (!s) return null;
                            return (
                                <div
                                    class={`skills__item skills__item--${s.key}`}
                                >
                                    <img src={s.img} alt={s.name} />
                                    <div class="skills__item-name fade-up">
                                        {s.name}
                                    </div>
                                </div>
                            );
                        })}
                    </div>
                ))
            }
        </div>
    </div>
</section>

<script is:inline>
    /* once-per-element fade-up */
    const io = new IntersectionObserver(
        (entries, o) => {
            entries.forEach((e) => {
                if (e.isIntersecting) {
                    const d = e.target.dataset.delay || 0;
                    e.target.style.transition = `opacity .6s ease ${d}ms,transform .6s ease ${d}ms`;
                    e.target.classList.add("visible");
                    o.unobserve(e.target);
                }
            });
        },
        { threshold: 0.1 },
    );
    document.querySelectorAll(".fade-up").forEach((el) => io.observe(el));
</script>

<style>
    .about {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-block: 3rem;
    }

    .title {
        font-size: var(--text-4xl, 2.5rem);
        text-align: center;
        margin-bottom: 4rem;
        position: relative;
    }

    .underline {
        display: block;
        width: 6rem;
        height: 0.4rem;
        border-radius: 0.25rem;
        background: var(--accent-regular, #ff4d5a);
        margin: 0.6rem auto 0;
    }

    .wrapper {
        display: grid;
        gap: 2rem;
    }
    @media (min-width: 60em) {
        .wrapper {
            /* 60 % text | 40 % pills  */
            grid-template-columns: 3fr 2fr;
            align-items: center;
        }
    }

    .intro {
        max-width: 60ch;
        margin-inline: auto;
        text-align: center;
    }
    @media (min-width: 60em) {
        .intro {
            text-align: left;
            margin-inline: 0;
        }
    }

    .avatar-mask {
        width: 50%;
        max-width: 14rem;
        aspect-ratio: 1;
        display: block;
        margin-inline: auto;
        margin-block: 2rem 3rem;

        background: var(--gradient-accent);

        /* shrink the SVG to ~85 % inside the square so the stroke isnâ€™t clipped */
        -webkit-mask: url("/assets/avatar.svg") center / 85% 85% no-repeat;
        mask: url("/assets/avatar.svg") center / 85% 85% no-repeat;
    }
    @media (min-width: 60em) {
        .avatar-mask {
            align-self: center;
        }
    }

    p {
        font-size: var(--text-lg, 1.125rem);
        line-height: 1.6;
        color: var(--gray-300, #d1d5db);
    }

    .skills {
        display: flex;
        flex-direction: row;
        gap: 2rem;
        align-items: center;
    }
    .skills__row {
        display: flex;
        gap: 2rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    /* pill */
    .skills__item {
        width: 9rem;
        min-height: 5rem;
        padding: 1rem 1rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        text-align: center;
        font-weight: 600;
        color: var(--accent-text-over, #fff);
        border-radius: 1rem;
        position: relative;
    }

    /* gradient outline */
    .skills__item::before {
        content: "";
        position: absolute;
        inset: 0;
        padding: 2px;
        border-radius: inherit;
        background: var(
            --gradient-accent,
            linear-gradient(45deg, #51a2e9, #ff4d5a)
        );
        -webkit-mask:
            linear-gradient(#000 0 0) content-box,
            linear-gradient(#000 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
        pointer-events: none;
        z-index: -1;
    }

    /* icon */
    .skills__item img {
        height: var(--icon-h);
        width: auto;
        object-fit: contain;
        user-select: none;
        pointer-events: none;
        display: block;
    }

    /* label */
    .skills__item-name {
        text-transform: uppercase;
        font-size: var(--text-sm, 1.125rem);
        line-height: 1.6;
        color: var(--gray-300, #d1d5db);
    }

    @media (hover: hover) {
        .skills__item {
            transition: transform 0.2s ease;
        }
        .skills__item:hover {
            transform: translateY(-4px) scale(1.02);
        }
    }

    .fade-up {
        opacity: 0;
        transform: translateY(20px);
    }
    .visible {
        opacity: 1;
        transform: translateY(0);
        transition: inherit;
    }
</style>
